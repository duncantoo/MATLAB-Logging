# This is a basic workflow to help you get started with MATLAB Actions

name: MATLAB Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push requests.
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Run on a variety of releases
        release: [R2023a, R2023b]
      # Keep running other releases even if one fails.
      fail-fast: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      # Sets up MATLAB on the GitHub Actions runner
      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          release: ${{matrix.release}}

      # Runs a set of commands using the runners shell
      - name: Run all tests
        uses: matlab-actions/run-tests@v1
        with:
          source-folder: code

      # You can use "run-command" to execute custom MATLAB scripts, functions, or statements.
      #- name: Run custom testing procedure
      #  uses: matlab-actions/run-command@v1
      #  with:
      #    command: disp('Running my custom testing procedure!'); addpath('code'); results = runtests('IncludeSubfolders', true); assertSuccess(results);